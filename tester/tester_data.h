

//tables
struct table_test_data{
	char test_name[100];
	int table_num;
	int num_tuples;
	int * data_types;
	int * key_indices;
	int data_types_size;
	int key_indices_size;
	union record_item ** data;
	union record_item ** data_ordered;
};

static int num_tests = 6;
static struct table_test_data * test_table_data;

void populate_tests(){
	test_table_data = malloc(sizeof(struct table_test_data) * num_tests);
	
	//create table 0 (one attr, integer)
	strcpy(test_table_data[0].test_name, "one attr {int}, key {0}");
	test_table_data[0].num_tuples = 10;
	test_table_data[0].data_types = malloc(sizeof(int) * 1);
	test_table_data[0].data_types_size = 1;
	test_table_data[0].data_types[0] = 0;	
	test_table_data[0].key_indices = malloc(sizeof(int));
	test_table_data[0].key_indices[0] = 0;
	test_table_data[0].key_indices_size = 1;

	test_table_data[0].data = malloc(sizeof(union record_item *) * 10);
	test_table_data[0].data[0] = malloc(sizeof(union record_item));
	test_table_data[0].data[0][0].i = 5;
	test_table_data[0].data[1] = malloc(sizeof(union record_item));
	test_table_data[0].data[1][0].i = 2;
	test_table_data[0].data[2] = malloc(sizeof(union record_item));
	test_table_data[0].data[2][0].i = 7;
	test_table_data[0].data[3] = malloc(sizeof(union record_item));
	test_table_data[0].data[3][0].i = 8;
	test_table_data[0].data[4] = malloc(sizeof(union record_item));
	test_table_data[0].data[4][0].i = 1;
	test_table_data[0].data[5] = malloc(sizeof(union record_item));
	test_table_data[0].data[5][0].i = 4;
	test_table_data[0].data[6] = malloc(sizeof(union record_item));
	test_table_data[0].data[6][0].i = 3;
	test_table_data[0].data[7] = malloc(sizeof(union record_item));
	test_table_data[0].data[7][0].i = 12;
	test_table_data[0].data[8] = malloc(sizeof(union record_item));
	test_table_data[0].data[8][0].i = 0;
	test_table_data[0].data[9] = malloc(sizeof(union record_item));
	test_table_data[0].data[9][0].i = 6;

	test_table_data[0].data_ordered = malloc(sizeof(union record_item *) * 10);
	test_table_data[0].data_ordered[0] = malloc(sizeof(union record_item));
	test_table_data[0].data_ordered[0][0].i = 0;
	test_table_data[0].data_ordered[1] = malloc(sizeof(union record_item));
	test_table_data[0].data_ordered[1][0].i = 1;
	test_table_data[0].data_ordered[2] = malloc(sizeof(union record_item));
	test_table_data[0].data_ordered[2][0].i = 2;
	test_table_data[0].data_ordered[3] = malloc(sizeof(union record_item));
	test_table_data[0].data_ordered[3][0].i = 3;
	test_table_data[0].data_ordered[4] = malloc(sizeof(union record_item));
	test_table_data[0].data_ordered[4][0].i = 4;
	test_table_data[0].data_ordered[5] = malloc(sizeof(union record_item));
	test_table_data[0].data_ordered[5][0].i = 5;
	test_table_data[0].data_ordered[6] = malloc(sizeof(union record_item));
	test_table_data[0].data_ordered[6][0].i = 6;
	test_table_data[0].data_ordered[7] = malloc(sizeof(union record_item));
	test_table_data[0].data_ordered[7][0].i = 7;
	test_table_data[0].data_ordered[8] = malloc(sizeof(union record_item));
	test_table_data[0].data_ordered[8][0].i = 8;
	test_table_data[0].data_ordered[9] = malloc(sizeof(union record_item));
	test_table_data[0].data_ordered[9][0].i = 12;


	//create table 1 (two attr, integer/double, one attr pk)
	strcpy(test_table_data[1].test_name, "two attr {int, dbl}, key {0}");
	test_table_data[1].num_tuples = 5;
	test_table_data[1].data_types = malloc(sizeof(int) * 2);
	test_table_data[1].data_types_size = 2;
	test_table_data[1].data_types[0] = 0;	
	test_table_data[1].data_types[1] = 1;
	test_table_data[1].key_indices = malloc(sizeof(int));
	test_table_data[1].key_indices[0] = 0;
	test_table_data[1].key_indices_size = 1;

	test_table_data[1].data = malloc(sizeof(union record_item *) * 5);
	test_table_data[1].data[0] = malloc(sizeof(union record_item) * 2);
	test_table_data[1].data[0][0].i = 5;
	test_table_data[1].data[0][1].d = 4.1;
	test_table_data[1].data[1] = malloc(sizeof(union record_item) * 2);
	test_table_data[1].data[1][0].i = 2;
	test_table_data[1].data[1][1].d = 8.3;
	test_table_data[1].data[2] = malloc(sizeof(union record_item) * 2);
	test_table_data[1].data[2][0].i = 7;
	test_table_data[1].data[2][1].d = 1.25;
	test_table_data[1].data[3] = malloc(sizeof(union record_item) * 2);
	test_table_data[1].data[3][0].i = 8;
	test_table_data[1].data[3][1].d = 3.82;
	test_table_data[1].data[4] = malloc(sizeof(union record_item) * 2);
	test_table_data[1].data[4][0].i = 1;
	test_table_data[1].data[4][1].d = 11.5;

	test_table_data[1].data_ordered = malloc(sizeof(union record_item *) * 5);
	test_table_data[1].data_ordered[0] = malloc(sizeof(union record_item) * 2);
	test_table_data[1].data_ordered[0][0].i = 1;
	test_table_data[1].data_ordered[0][1].d = 11.5;
	test_table_data[1].data_ordered[1] = malloc(sizeof(union record_item) * 2);
	test_table_data[1].data_ordered[1][0].i = 2;
	test_table_data[1].data_ordered[1][1].d = 8.3;
	test_table_data[1].data_ordered[2] = malloc(sizeof(union record_item) * 2);
	test_table_data[1].data_ordered[2][0].i = 5;
	test_table_data[1].data_ordered[2][1].d = 4.1;
	test_table_data[1].data_ordered[3] = malloc(sizeof(union record_item) * 2);
	test_table_data[1].data_ordered[3][0].i = 7;
	test_table_data[1].data_ordered[3][1].d = 1.25;
	test_table_data[1].data_ordered[4] = malloc(sizeof(union record_item) * 2);
	test_table_data[1].data_ordered[4][0].i = 8;
	test_table_data[1].data_ordered[4][1].d = 3.82;
	

	//create table 2 (two attr, integer/double, one attr pk 2nd attr)
	strcpy(test_table_data[2].test_name, "two attr {int, dbl}, key {0,1}");
	test_table_data[2].num_tuples = 5;
	test_table_data[2].data_types = malloc(sizeof(int) * 2);
	test_table_data[2].data_types_size = 2;
	test_table_data[2].data_types[0] = 0;	
	test_table_data[2].data_types[1] = 1;
	test_table_data[2].key_indices = malloc(sizeof(int));
	test_table_data[2].key_indices[0] = 1;
	test_table_data[2].key_indices_size = 1;

	test_table_data[2].data = malloc(sizeof(union record_item *) * 5);
	test_table_data[2].data[0] = malloc(sizeof(union record_item) * 2);
	test_table_data[2].data[0][0].i = 5;
	test_table_data[2].data[0][1].d = 4.1;
	test_table_data[2].data[1] = malloc(sizeof(union record_item) * 2);
	test_table_data[2].data[1][0].i = 2;
	test_table_data[2].data[1][1].d = 8.3;
	test_table_data[2].data[2] = malloc(sizeof(union record_item) * 2);
	test_table_data[2].data[2][0].i = 7;
	test_table_data[2].data[2][1].d = 1.25;
	test_table_data[2].data[3] = malloc(sizeof(union record_item) * 2);
	test_table_data[2].data[3][0].i = 8;
	test_table_data[2].data[3][1].d = 3.82;
	test_table_data[2].data[4] = malloc(sizeof(union record_item) * 2);
	test_table_data[2].data[4][0].i = 1;
	test_table_data[2].data[4][1].d = 11.5;

	test_table_data[2].data_ordered = malloc(sizeof(union record_item *) * 5);
	test_table_data[2].data_ordered[0] = malloc(sizeof(union record_item) * 2);
	test_table_data[2].data_ordered[0][0].i = 7;
	test_table_data[2].data_ordered[0][1].d = 1.25;
	test_table_data[2].data_ordered[1] = malloc(sizeof(union record_item) * 2);
	test_table_data[2].data_ordered[1][0].i = 8;
	test_table_data[2].data_ordered[1][1].d = 3.82;
	test_table_data[2].data_ordered[2] = malloc(sizeof(union record_item) * 2);
	test_table_data[2].data_ordered[2][0].i = 5;
	test_table_data[2].data_ordered[2][1].d = 4.1;
	test_table_data[2].data_ordered[3] = malloc(sizeof(union record_item) * 2);
	test_table_data[2].data_ordered[3][0].i = 2;
	test_table_data[2].data_ordered[3][1].d = 8.3;
	test_table_data[2].data_ordered[4] = malloc(sizeof(union record_item) * 2);
	test_table_data[2].data_ordered[4][0].i = 1;
	test_table_data[2].data_ordered[4][1].d = 11.5;

	//create table 3 (two attr, integer/double, 2 attr pk 1,0)
	strcpy(test_table_data[3].test_name, "two attr {int, dbl}, key {0,1}");
	test_table_data[3].num_tuples = 8;
	test_table_data[3].data_types = malloc(sizeof(int) * 2);
	test_table_data[3].data_types_size = 2;
	test_table_data[3].data_types[0] = 0;	
	test_table_data[3].data_types[1] = 1;
	test_table_data[3].key_indices = malloc(sizeof(int) * 2);
	test_table_data[3].key_indices[0] = 0;
	test_table_data[3].key_indices[1] = 1;
	test_table_data[3].key_indices_size = 2;

	test_table_data[3].data = malloc(sizeof(union record_item *) * 8);
	test_table_data[3].data[0] = malloc(sizeof(union record_item) * 2);
	test_table_data[3].data[0][0].i = 5;
	test_table_data[3].data[0][1].d = 4.1;
	test_table_data[3].data[1] = malloc(sizeof(union record_item) * 2);
	test_table_data[3].data[1][0].i = 2;
	test_table_data[3].data[1][1].d = 8.3;
	test_table_data[3].data[2] = malloc(sizeof(union record_item) * 2);
	test_table_data[3].data[2][0].i = 7;
	test_table_data[3].data[2][1].d = 1.25;
	test_table_data[3].data[3] = malloc(sizeof(union record_item) * 2);
	test_table_data[3].data[3][0].i = 8;
	test_table_data[3].data[3][1].d = 3.82;
	test_table_data[3].data[4] = malloc(sizeof(union record_item) * 2);
	test_table_data[3].data[4][0].i = 1;
	test_table_data[3].data[4][1].d = 11.5;
	test_table_data[3].data[5] = malloc(sizeof(union record_item) * 2);
	test_table_data[3].data[5][0].i = 1;
	test_table_data[3].data[5][1].d = 2.5;
	test_table_data[3].data[6] = malloc(sizeof(union record_item) * 2);
	test_table_data[3].data[6][0].i = 8;
	test_table_data[3].data[6][1].d = 11.5;
	test_table_data[3].data[7] = malloc(sizeof(union record_item) * 2);
	test_table_data[3].data[7][0].i = 2;
	test_table_data[3].data[7][1].d = 3.8;

	test_table_data[3].data_ordered = malloc(sizeof(union record_item *) * 8);
	test_table_data[3].data_ordered[0] = malloc(sizeof(union record_item) * 2);
	test_table_data[3].data_ordered[0][0].i = 1;
	test_table_data[3].data_ordered[0][1].d = 2.5;
	test_table_data[3].data_ordered[1] = malloc(sizeof(union record_item) * 2);
	test_table_data[3].data_ordered[1][0].i = 1;
	test_table_data[3].data_ordered[1][1].d = 11.5;
	test_table_data[3].data_ordered[2] = malloc(sizeof(union record_item) * 2);
	test_table_data[3].data_ordered[2][0].i = 2;
	test_table_data[3].data_ordered[2][1].d = 3.8;
	test_table_data[3].data_ordered[3] = malloc(sizeof(union record_item) * 2);
	test_table_data[3].data_ordered[3][0].i = 2;
	test_table_data[3].data_ordered[3][1].d = 8.3;
	test_table_data[3].data_ordered[4] = malloc(sizeof(union record_item) * 2);
	test_table_data[3].data_ordered[4][0].i = 5;
	test_table_data[3].data_ordered[4][1].d = 4.1;
	test_table_data[3].data_ordered[5] = malloc(sizeof(union record_item) * 2);
	test_table_data[3].data_ordered[5][0].i = 7;
	test_table_data[3].data_ordered[5][1].d = 1.25;
	test_table_data[3].data_ordered[6] = malloc(sizeof(union record_item) * 2);
	test_table_data[3].data_ordered[6][0].i = 8;
	test_table_data[3].data_ordered[6][1].d = 3.82;
	test_table_data[3].data_ordered[7] = malloc(sizeof(union record_item) * 2);
	test_table_data[3].data_ordered[7][0].i = 8;
	test_table_data[3].data_ordered[7][1].d = 11.5;

	//create table 4 (multiple attr, integer/double/char/bool/varchar, 2 attr pk 1,0)
	strcpy(test_table_data[4].test_name, "five attr {int, dbl, char, bool, varchar}, key {1,0}");
	test_table_data[4].num_tuples = 5;
	test_table_data[4].data_types = malloc(sizeof(int) * 5);
	test_table_data[4].data_types_size = 5;
	test_table_data[4].data_types[0] = 0;	
	test_table_data[4].data_types[1] = 1;
	test_table_data[4].data_types[2] = 3;
	test_table_data[4].data_types[3] = 2;
	test_table_data[4].data_types[4] = 4;
	test_table_data[4].key_indices = malloc(sizeof(int) * 2);
	test_table_data[4].key_indices[0] = 1;
	test_table_data[4].key_indices[1] = 0;
	test_table_data[4].key_indices_size = 2;

	test_table_data[4].data = malloc(sizeof(union record_item *) * 5);
	test_table_data[4].data[0] = malloc(sizeof(union record_item) * 5);
	test_table_data[4].data[0][0].i = 5;
	test_table_data[4].data[0][1].d = 4.1;
	strcpy(test_table_data[4].data[0][2].c, "test01");
	test_table_data[4].data[0][3].b = 1;
	strcpy(test_table_data[4].data[0][4].v, "varchar1");
	test_table_data[4].data[1] = malloc(sizeof(union record_item) * 5);
	test_table_data[4].data[1][0].i = 2;
	test_table_data[4].data[1][1].d = 8.5;
	strcpy(test_table_data[4].data[1][2].c, "test02");
	test_table_data[4].data[1][3].b = 0;
	strcpy(test_table_data[4].data[1][4].v, "varchar2");
	test_table_data[4].data[2] = malloc(sizeof(union record_item) * 5);
	test_table_data[4].data[2][0].i = 6;
	test_table_data[4].data[2][1].d = 33.5;
	strcpy(test_table_data[4].data[2][2].c, "test03");
	test_table_data[4].data[2][3].b = 1;
	strcpy(test_table_data[4].data[2][4].v, "varchar3");
	test_table_data[4].data[3] = malloc(sizeof(union record_item) * 5);
	test_table_data[4].data[3][0].i = 1;
	test_table_data[4].data[3][1].d = 12.2;
	strcpy(test_table_data[4].data[3][2].c, "test04");
	test_table_data[4].data[3][3].b = 1;
	strcpy(test_table_data[4].data[3][4].v, "varchar4");
	test_table_data[4].data[4] = malloc(sizeof(union record_item) * 5);
	test_table_data[4].data[4][0].i = 1;
	test_table_data[4].data[4][1].d = 8.5;
	strcpy(test_table_data[4].data[4][2].c, "test05");
	test_table_data[4].data[4][3].b = 0;
	strcpy(test_table_data[4].data[4][4].v, "varchar5");

	test_table_data[4].data_ordered = malloc(sizeof(union record_item *) * 5);
	test_table_data[4].data_ordered[0] = malloc(sizeof(union record_item) * 5);
	test_table_data[4].data_ordered[0][0].i = 5;
	test_table_data[4].data_ordered[0][1].d = 4.1;
	strcpy(test_table_data[4].data_ordered[0][2].c, "test01");
	test_table_data[4].data_ordered[0][3].b = 1;
	strcpy(test_table_data[4].data_ordered[0][4].v, "varchar1");
	test_table_data[4].data_ordered[1] = malloc(sizeof(union record_item) * 5);
	test_table_data[4].data_ordered[1][0].i = 1;
	test_table_data[4].data_ordered[1][1].d = 8.5;
	strcpy(test_table_data[4].data_ordered[1][2].c, "test05");
	test_table_data[4].data_ordered[1][3].b = 0;
	strcpy(test_table_data[4].data_ordered[1][4].v, "varchar5");
	test_table_data[4].data_ordered[2] = malloc(sizeof(union record_item) * 5);
	test_table_data[4].data_ordered[2][0].i = 2;
	test_table_data[4].data_ordered[2][1].d = 8.5;
	strcpy(test_table_data[4].data_ordered[2][2].c, "test02");
	test_table_data[4].data_ordered[2][3].b = 0;
	strcpy(test_table_data[4].data_ordered[2][4].v, "varchar2");
	test_table_data[4].data_ordered[3] = malloc(sizeof(union record_item) * 5);
	test_table_data[4].data_ordered[3][0].i = 1;
	test_table_data[4].data_ordered[3][1].d = 12.2;
	strcpy(test_table_data[4].data_ordered[3][2].c, "test04");
	test_table_data[4].data_ordered[3][3].b = 1;
	strcpy(test_table_data[4].data_ordered[3][4].v, "varchar4");
	test_table_data[4].data_ordered[4] = malloc(sizeof(union record_item) * 5);
	test_table_data[4].data_ordered[4][0].i = 6;
	test_table_data[4].data_ordered[4][1].d = 33.5;
	strcpy(test_table_data[4].data_ordered[4][2].c, "test03");
	test_table_data[4].data_ordered[4][3].b = 1;
	strcpy(test_table_data[4].data_ordered[4][4].v, "varchar3");

	//create table 5 (multiple attr, integer/double/char/varchar, 1 attr pk 2)
	strcpy(test_table_data[5].test_name, "five attr {int, dbl, char, bool, varchar}, key {2}");
	test_table_data[5].data_types = malloc(sizeof(int) * 5);
	test_table_data[5].num_tuples = 5;
	test_table_data[5].data_types_size = 5;
	test_table_data[5].data_types[0] = 0;	
	test_table_data[5].data_types[1] = 1;
	test_table_data[5].data_types[2] = 3;
	test_table_data[5].data_types[3] = 2;
	test_table_data[5].data_types[4] = 4;
	test_table_data[5].key_indices = malloc(sizeof(int));
	test_table_data[5].key_indices[0] = 2;
	test_table_data[5].key_indices_size = 1;

	test_table_data[5].data = malloc(sizeof(union record_item *) * 5);
	test_table_data[5].data[0] = malloc(sizeof(union record_item) * 5);
	test_table_data[5].data[0][0].i = 5;
	test_table_data[5].data[0][1].d = 4.1;
	strcpy(test_table_data[5].data[0][2].c, "test01");
	test_table_data[5].data[0][3].b = 1;
	strcpy(test_table_data[5].data[0][4].v, "varchar1");
	test_table_data[5].data[1] = malloc(sizeof(union record_item) * 5);
	test_table_data[5].data[1][0].i = 2;
	test_table_data[5].data[1][1].d = 8.5;
	strcpy(test_table_data[5].data[1][2].c, "test03");
	test_table_data[5].data[1][3].b = 0;
	strcpy(test_table_data[5].data[1][4].v, "varchar3");
	test_table_data[5].data[2] = malloc(sizeof(union record_item) * 5);
	test_table_data[5].data[2][0].i = 6;
	test_table_data[5].data[2][1].d = 33.5;
	strcpy(test_table_data[5].data[2][2].c, "test05");
	test_table_data[5].data[2][3].b = 1;
	strcpy(test_table_data[5].data[2][4].v, "varchar5");
	test_table_data[5].data[3] = malloc(sizeof(union record_item) * 5);
	test_table_data[5].data[3][0].i = 1;
	test_table_data[5].data[3][1].d = 12.2;
	strcpy(test_table_data[5].data[3][2].c, "test04");
	test_table_data[5].data[3][3].b = 1;
	strcpy(test_table_data[5].data[3][4].v, "varchar4");
	test_table_data[5].data[4] = malloc(sizeof(union record_item) * 5);
	test_table_data[5].data[4][0].i = 1;
	test_table_data[5].data[4][1].d = 8.5;
	strcpy(test_table_data[5].data[4][2].c, "test02");
	test_table_data[5].data[4][3].b = 0;
	strcpy(test_table_data[5].data[4][4].v, "varchar2");

	test_table_data[5].data_ordered = malloc(sizeof(union record_item *) * 5);
	test_table_data[5].data_ordered[0] = malloc(sizeof(union record_item) * 5);
	test_table_data[5].data_ordered[0][0].i = 5;
	test_table_data[5].data_ordered[0][1].d = 4.1;
	strcpy(test_table_data[5].data_ordered[0][2].c, "test01");
	test_table_data[5].data_ordered[0][3].b = 1;
	strcpy(test_table_data[5].data_ordered[0][4].v, "varchar1");
	test_table_data[5].data_ordered[1] = malloc(sizeof(union record_item) * 5);
	test_table_data[5].data_ordered[1][0].i = 1;
	test_table_data[5].data_ordered[1][1].d = 8.5;
	strcpy(test_table_data[5].data_ordered[1][2].c, "test02");
	test_table_data[5].data_ordered[1][3].b = 0;
	strcpy(test_table_data[5].data_ordered[1][4].v, "varchar2");
	test_table_data[5].data_ordered[2] = malloc(sizeof(union record_item) * 5);
	test_table_data[5].data_ordered[2][0].i = 2;
	test_table_data[5].data_ordered[2][1].d = 8.5;
	strcpy(test_table_data[5].data_ordered[2][2].c, "test03");
	test_table_data[5].data_ordered[2][3].b = 0;
	strcpy(test_table_data[5].data_ordered[2][4].v, "varchar3");
	test_table_data[5].data_ordered[3] = malloc(sizeof(union record_item) * 5);
	test_table_data[5].data_ordered[3][0].i = 1;
	test_table_data[5].data_ordered[3][1].d = 12.2;
	strcpy(test_table_data[5].data_ordered[3][2].c, "test04");
	test_table_data[5].data_ordered[3][3].b = 1;
	strcpy(test_table_data[5].data_ordered[3][4].v, "varchar4");
	test_table_data[5].data_ordered[4] = malloc(sizeof(union record_item) * 5);
	test_table_data[5].data_ordered[4][0].i = 6;
	test_table_data[5].data_ordered[4][1].d = 33.5;
	strcpy(test_table_data[5].data_ordered[4][2].c, "test05");
	test_table_data[5].data_ordered[4][3].b = 1;
	strcpy(test_table_data[5].data_ordered[4][4].v, "varchar5");
}
